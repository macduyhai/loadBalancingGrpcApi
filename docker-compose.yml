version: "3.4"
services:
  chat-server-1:
    build:
      context: "./"
      dockerfile: "./chat-server-1/Dockerfile"
      cache_from:
        - ubuntu:16.04
        - golang:1.17
    depends_on:
      - mysql-chat:
         - condition: service_healthy
    image: chatserver1:v1.0.0
    volumes:
      - ./chat-server-1/storage:/app/storage
      - ./chat-server-1/chat_history:/app/chat_history
    ports:
      - "8001:8080"
    environment:
      - ID=chat-server-1
    env_file: .env
    networks:
     - chat-net
  chat-server-2:
    build:
      context: "./"
      dockerfile: "./chat-server-2/Dockerfile"
      cache_from:
        - ubuntu:16.04
        - golang:1.17 
    depends_on:
      - mysql-chat:
         - condition: service_healthy
    image: chatserver2:v1.0.0
    volumes:
      - ./chat-server-2/storage:/app/storage
      - ./chat-server-2/chat_history:/app/chat_history
    ports:
      - "8002:8080"
    environment:
      - ID=chat-server-2
    env_file: .env
    networks:
     - chat-net
  # Mysql 
  mysql-chat:
    image: mysql:5.7
    container_name: mysqlchatdb
    restart: always
    ports:
      - "3309:3306"
    command: --default-authentication-plugin=mysql_native_password --init-file /data/application/init.sql
    volumes:
      - db_data:/var/lib/mysql
      - ./sql/init.sql:/data/application/init.sql
    networks:
     - chat-net
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_DATABASE: chatdb
      MYSQL_ROOT_PASSWORD: 1234
      TZ: Asia/Ho_Chi_Minh
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  # ngnix-server:
  #     image: nginx:1.13
  #     ports: 
  #         - "80:80"
  #     volumes: 
  #         - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     networks: 
  #         - chat-net
  #     depends_on: 
  #         - chat-server-1
  #         # - chat-server-2
volumes:
  db_data:
    name: chat-data-vl
    driver: local
    external: true
# Networks to be created to facilitate communication between containers
networks:
  chat-net:
    driver: bridge
